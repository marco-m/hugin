.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HUGIN_HDRMERGE 1"
.TH HUGIN_HDRMERGE 1 "2008-02-08" "perl v5.8.5" "HUGIN"
.SH "NAME"
hugin_hdrmerge \- Merge overlapping images
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBhugin_hdrmerge\fR [options] \fB\-o\fR \fIoutput.exr\fR \fIinput-files\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1TODO\s0.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-o\fR \fIprefix\fR" 4
.IX Item "-o prefix"
Output file
.IP "\fB\-m\fR \fImode\fR" 4
.IX Item "-m mode"
Merge mode, can be one of: avg, avg_slow, khan (default), if avg, no
\&\fB\-i\fR, \fB\-s\fR, or \fB\-d\fR options apply
.IP "\fB\-i\fR \fIiter\fR" 4
.IX Item "-i iter"
Number of iterations to execute (default is 1)
.IP "\fB\-c\fR" 4
.IX Item "-c"
Only consider pixels that are defined in all images (avg mode only)
.IP "\fB\-s\fR \fIfile\fR" 4
.IX Item "-s file"
Debug files to save each iteration, can be one of:
.RS 4
.IP "a \- all debug files (can only be used alone)" 4
.IX Item "a - all debug files (can only be used alone)"
.PD 0
.IP "w \- calculated weights from each iteration" 4
.IX Item "w - calculated weights from each iteration"
.IP "r \- result image from each iteration" 4
.IX Item "r - result image from each iteration"
.IP "s \- source images before processing" 4
.IX Item "s - source images before processing"
.RE
.RS 4
.PD
.Sp
If verbose >= 3, all debug files are output unless specified
.RE
.IP "\fB\-a\fR \fIcalcs\fR" 4
.IX Item "-a calcs"
Apply one or more advanced caculations, can be one or more of:
.RS 4
.IP "b \- biasing weights logarithmically" 4
.IX Item "b - biasing weights logarithmically"
.PD 0
.IP "c \- choose pixels with heighest weight instead of averaging (overrides options \fB\-a\fR \fIb\fR and \fB\-a\fR \fId\fR)" 4
.IX Item "c - choose pixels with heighest weight instead of averaging (overrides options -a b and -a d)"
.IP "d \- choose a pixel with the heighest weight instead of averaging when all pixel weights are within 10% of eachother" 4
.IX Item "d - choose a pixel with the heighest weight instead of averaging when all pixel weights are within 10% of eachother"
.IP "h \- favor a high signal to noise ratio" 4
.IX Item "h - favor a high signal to noise ratio"
.IP "i \- ignore alpha channel" 4
.IX Item "i - ignore alpha channel"
.RE
.RS 4
.RE
.IP "\fB\-e\fR" 4
.IX Item "-e"
.PD
Export each initial weight to <input_file_paths>_iw.<ext>
.IP "\fB\-l\fR" 4
.IX Item "-l"
Load a previously exported initial weight with respect to the input
file names
.Sp
\&\s-1NOTE:\s0 if both \fB\-e\fR and \fB\-l\fR options are on, the program will
calculate and save the initial weights, then wait until user indicates
that it can continue by loading the previously saved weights
.IP "\fB\-v\fR" 4
.IX Item "-v"
Verbose, print progress messages, repeat for even more verbose output
.IP "\fB\-h\fR" 4
.IX Item "-h"
Display help summary.
.SH "AUTHORS"
.IX Header "AUTHORS"
Written by Jing Jin. Also contains contributions from Pablo d'Angelo, Douglas Wilkins, Ippei Ukai, Ed Halley, Bruno Postle, Gerry Patterson and Brent Townshend.
.PP
This manpage was written by Cyril Brulebois
<cyril.brulebois@enst\-bretagne.fr> and is licensed under the same
terms as the hugin package itself.
