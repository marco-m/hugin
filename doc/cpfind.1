.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CPFIND 1"
.TH CPFIND 1 "2010-11-12" "perl v5.10.1" "HUGIN"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
cpfind \- Feature matching for panoramic stitching
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBcpfind\fR [options] \-o \fIoutput_project\fR \fIproject.pto\fR
.PP
\&\fBcpfind\fR [options] \-k i0 \-k i1 [...] \fIproject.pto\fR
.PP
\&\fBcpfind\fR [options] \-\-kall \fIproject.pto\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBcpfind\fR cpfind is a control-point detector for Hugin. It expects a project
file as input and writes a project file with control-points on success.
.PP
The first step is the feature description: In this step the images of the
project file are loaded and so called keypoints are searched. They describe
destinctive features in the image. \fBcpfind\fR uses a gradient based descriptor
for the feature description of the keypoints.
.PP
In a second step, the feature matching, all keypoints of two images are matched
against each other to find features which are on both images. If this matching
was successfull two keypoints in the two images become one control point.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-celesteRadius\fR <int>" 4
.IX Item "--celesteRadius <int>"
Radius for celeste (default 20)
.IP "\fB\-\-celesteThreshold\fR <double>" 4
.IX Item "--celesteThreshold <double>"
Threshold for celeste (default 0.5)
.IP "\fB\-\-celeste\fR" 4
.IX Item "--celeste"
Run celeste sky identification after loading images, this ignores all features
associated with 'clouds'.
.IP "\fB\-p <string\fR, \fB\-\-keypath\fR <string>" 4
.IX Item "-p <string, --keypath <string>"
Path to cache keyfiles
.IP "\fB\-\-clean\fR" 4
.IX Item "--clean"
Clean up cached keyfiles
.IP "\fB\-c\fR, \fB\-\-cache\fR" 4
.IX Item "-c, --cache"
Caches keypoints to external file
.IP "\fB\-\-kall\fR" 4
.IX Item "--kall"
Write keyfiles for all images
.IP "\fB\-k\fR <int>, \fB\-\-writekeyfile\fR <int>" 4
.IX Item "-k <int>, --writekeyfile <int>"
Write a keyfile for this image number (accepted multiple times)
.IP "\fB\-o\fR <string>, \fB\-\-output\fR <string>" 4
.IX Item "-o <string>, --output <string>"
Output file, required
.IP "\fB\-n\fR <int>, \fB\-\-ncores\fR <int>" 4
.IX Item "-n <int>, --ncores <int>"
Number of CPU/Cores (default:autodetect)
.IP "\fB\-t\fR, \fB\-\-test\fR" 4
.IX Item "-t, --test"
Enables test mode
.IP "\fB\-\-fullscale\fR" 4
.IX Item "--fullscale"
Uses full scale image to detect keypoints (default:false)
.IP "\fB\-\-sieve1width\fR <int>" 4
.IX Item "--sieve1width <int>"
Sieve 1 : Number of buckets on width (default : 10)
.IP "\fB\-\-sieve1height\fR <int>" 4
.IX Item "--sieve1height <int>"
Sieve 1 : Number of buckets on height (default : 10)
.IP "\fB\-\-sieve1size\fR <int>" 4
.IX Item "--sieve1size <int>"
Sieve 1 : Max points per bucket (default : 30)
.IP "\fB\-\-kdtreesteps\fR <int>" 4
.IX Item "--kdtreesteps <int>"
KDTree : search steps (default : 40)
.IP "\fB\-\-kdtreeseconddist\fR <double>" 4
.IX Item "--kdtreeseconddist <double>"
KDTree : distance of 2nd match (default : 0.15)
.IP "\fB\-\-multirow\fR" 4
.IX Item "--multirow"
Enable heuristic multi row matching (default: off)
.IP "\fB\-\-linearmatch\fR" 4
.IX Item "--linearmatch"
Enable linear images matching (default : all pairs)
.IP "\fB\-\-linearmatchlen\fR <int>" 4
.IX Item "--linearmatchlen <int>"
Number of images to match in linear matching (default:1)
.IP "\fB\-\-minmatches\fR <int>" 4
.IX Item "--minmatches <int>"
Minimum matches (default : 4)
.IP "\fB\-\-ransaciter\fR <int>" 4
.IX Item "--ransaciter <int>"
Ransac : iterations (default : 1000)
.IP "\fB\-\-ransacdist\fR <int>" 4
.IX Item "--ransacdist <int>"
Ransac : homography estimation distance threshold (pixels) (default : 25)
.IP "\fB\-\-sieve2width\fR <int>" 4
.IX Item "--sieve2width <int>"
Sieve 2 : Number of buckets on width (default : 5)
.IP "\fB\-\-sieve2height\fR <int>" 4
.IX Item "--sieve2height <int>"
Sieve 2 : Number of buckets on height (default : 5)
.IP "\fB\-\-sieve2size\fR <int>" 4
.IX Item "--sieve2size <int>"
Sieve 2 : Max points per bucket (default : 2)
.IP "\fB\-\-\fR, \fB\-\-ignore_rest\fR" 4
.IX Item "--, --ignore_rest"
Ignores the rest of the labeled arguments following this flag.
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Displays version information and exits.
.IP "\fB\-h\fR, \fB\-\-help\fR" 4
.IX Item "-h, --help"
Displays usage information and exits.
.SH "AUTHORS"
.IX Header "AUTHORS"
Anael Orlinski, Pablo d'Angelo, Antoine Deleforge, Thomas Modes
